version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: "UrlShortener"
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - mongo-compose-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    links:
      - mongodb
    networks:
      - mongo-compose-network
  
  cache:
    image: redis:6.2-alpine
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
  
  urlshortener_api:
    image: ${DOCKER_REGISTRY-}urlshortenerapi
    container_name: urlshortener_api
    build:
      context: .
      dockerfile: src/UrlShortener.API/Dockerfile
    depends_on:
      - mongodb
      - cache
    ports:
      - 8080:80
      - 443:443
    restart: always
    environment:
      - DBHOST=mongodb
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URL=http://+:80
      - REDIS_HOST= cache
      - REDIS_PORT= 6379
      - REDIS_PASSWORD= eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    links:
      - mongodb
      - cache
    networks:
      - mongo-compose-network

volumes:
  mongodb_data:
  cache:
    driver: local

networks:
  mongo-compose-network:
    driver: bridge